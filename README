bigCGI is a function as a service (FaaS) platform utilizing the CGI standard.

Why CGI?
  - CGI is easy to implement in almost any programming language
  - CGI scripts can be run and tested locally, and are not vendor specific
  - CGI scripts run with process isolation
  - CGI is a stateless standard

But isn't CGI slow?
  - Interpreters and process spinup are slow, but modern OS's and hardware
    greatly reduce this bottleneck.
  - For many applications, a few milliseconds doesn't really matter anyway

How does it work?
  - bigCGI is a python Bottle application, running on FreeBSD servers
  - The application stores your functions on a server, and runs them according
    to the CGI standard.
  - The application coordinates with a cluster of servers, and ensures your
    function is propogated across the cluster.
  - The bigCGI applications are deployed behind a reverse proxy

What is the status of this project?
  - bigCGI is in active development and is currently in a beta stage

Who can I contact?
  - I appreciate feedback and conversation
  - bigcgi.app (AT) gmail.com

------------------------------------------

See LICENSE, and TERMS

------------------------------------------
    
INSTALL INSTRUCTIONS
  - MANUAL INSTALL
    - add kern.racct.enable=1 to /boot/loader.conf, restart
    - create bigcgi user with adduser
    - install packages git, bash, sudo, tcl86, python35, apache24, mongodb, rabbitmq, supervisord
      - for apache24, it must be compiled with suexec
    - clone the repo into /home/bigcgi/bigcgi-repo
    - create an env.sh file and source to shell
    - virtualenv -p $(which python3.5) env 
    - source env/bin/activate
    - pip3 install -r requirements.txt
    - make sure mongod started with auth off, apache24 started, rabbitmq started
    - cd to serversetup, run sudo -E ./install.tcl
    - supervisord -c supervisord.conf (make sure env.sh and virtualenv activated)
  - VAGRANT
    - cd to serversetup, make env.sh and virtualenv
    - vagrant up && vagrant rsync-auto
    - some manual steps still for dev: comment out ssl config in apache, chown -R bigcgi:bigcgi .
    - more manual steps: add kern.racct.enable=1 to /boot/loader.conf, restart 

RUN TESTS
    - nosetests -vsx tests

